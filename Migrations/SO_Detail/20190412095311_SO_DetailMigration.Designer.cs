// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PJ_webservice_CRUD.Models;

namespace PJ_webservice_CRUD.Migrations.SO_Detail
{
    [DbContext(typeof(SO_DetailContext))]
    [Migration("20190412095311_SO_DetailMigration")]
    partial class SO_DetailMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PJ_webservice_CRUD.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PJ_webservice_CRUD.Models.Product", b =>
                {
                    b.Property<string>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Amount");

                    b.Property<string>("CategoryID");

                    b.Property<string>("ImgURL");

                    b.Property<int>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PJ_webservice_CRUD.Models.SO_Detail", b =>
                {
                    b.Property<string>("SO_DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProductID")
                        .IsRequired();

                    b.Property<DateTime>("SO_Date");

                    b.Property<string>("SO_HeaderSO_CusID")
                        .IsRequired();

                    b.Property<int>("SO_PriceOfUnit");

                    b.Property<int>("SO_Quantity");

                    b.HasKey("SO_DetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SO_HeaderSO_CusID");

                    b.ToTable("SO_Details");
                });

            modelBuilder.Entity("PJ_webservice_CRUD.Models.SO_Header", b =>
                {
                    b.Property<string>("SO_CusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SO_Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SO_CusName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SO_Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SO_Phone")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("SO_CusID");

                    b.ToTable("SO_Header");
                });

            modelBuilder.Entity("PJ_webservice_CRUD.Models.Product", b =>
                {
                    b.HasOne("PJ_webservice_CRUD.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("PJ_webservice_CRUD.Models.SO_Detail", b =>
                {
                    b.HasOne("PJ_webservice_CRUD.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PJ_webservice_CRUD.Models.SO_Header", "SO_Header")
                        .WithMany()
                        .HasForeignKey("SO_HeaderSO_CusID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
